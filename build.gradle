buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'com.matthewprenger:CurseGradle:1.0-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'com.matthewprenger.cursegradle'
apply plugin: 'maven'
apply plugin: 'maven-publish'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

repositories {

    mavenLocal()
    mavenCentral()
    maven {

        name = "thiakil"
        url = "http://maven.thiakil.com"
    }
    maven {

        url = "http://dvs1.progwml6.com/files/maven"
    }
}

version = "${mc_version}-${mod_version}"
group = package_group
archivesBaseName = mod_name

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {

    sourceCompatibility = targetCompatibility = '1.8'
}

configurations {

    shade
    compile.extendsFrom shade
}

minecraft {

    version = "${mc_version}-${forge_version}"
    runDir = "run"

    mappings = "${mappings_version}"
}

dependencies {

    deobfCompile "com.azanor.baubles:Baubles:1.12-1.5.2"
    deobfCompile "mezz.jei:jei_1.12.2:4.8.5.157:api"
    runtime "mezz.jei:jei_1.12.2:4.8.5.157"

    shade "com.nikhaldimann:inieditor:r6"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {

        exclude 'mcmod.info'
    }
}

jar {

    configurations.shade.each {

        dep -> from(project.zipTree(dep)) {

            exclude 'META_INF', "META-INF/**"
        }
    }
}

task deobfJar(type: Jar) {

    classifier = "deobf"
    from(sourceSets.main.output)
}

sourceJar {

    classifier = "sources"
}

artifacts {

    archives deobfJar
}

publishing {

    publications {

        mavenJava(MavenPublication) {

            artifact jar
            artifact sourceJar
            artifact deobfJar
        }
    }
    repositories {

        mavenLocal()
    }
}

defaultTasks 'clean', 'build', 'install', 'publish'
